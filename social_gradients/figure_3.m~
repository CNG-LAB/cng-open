
% First we averaged the values within 400 parcels to optimize bootstrapping

for i = 1:200
    G1_400(i,:) = mean(G1_last(:,parcels400==i+1),2)';
    G2_400(i,:) = mean(G2_last(:,parcels400==i+1),2)';
    G3_400(i,:) = mean(G3_last(:,parcels400==i+1),2)';
    Z_400(i,:)  = mean(Z_last(:,parcels400==i+1),2)';
end
for i = 1:200
    G1_400(i+200,:) = mean(G1_last(:,parcels400==i+1001),2)';
    G2_400(i+200,:) = mean(G2_last(:,parcels400==i+1001),2)';
    G3_400(i+200,:) = mean(G3_last(:,parcels400==i+1001),2)';
    Z_400(i+200,:)  = mean(Z_last(:,parcels400==i+1001),2)';
end

for prediction_tom = 1
    
        val     = (Tom);       
        Xn      = [ G1_400', G2_400', G3_400'];
        Xn(isnan(Xn)) = 0;
        keep1   = find(strcmp(groupN,'Perspective'));
        keep2   = intersect(find(abs(mean(Xn,2)) <100), find(sum(Xn,2)~=0));
        keep4   = find(~(strcmp(group4,'Group3')));
        keep5   = find(tpnum>0);
        keep7   = find(val~=0);
        keep    = mintersect(keep1,keep2,keep4,keep5,keep6);       
        Ck      = Xn(keep,:);        
        ak      = age(keep);
        sk      = cellstr(sex(keep));
      
        A       = term(ak);
        S       = term(sk);
       
        algoname = 'cv_lassopcr'; % cross-validated penalized regression. Predict pain ratings
  
        M = 1 + A + S;
        slm = SurfStatLinMod(Ck, M);
        feature_matrix = (Ck - slm.X*slm.coef);
       
        dat = dat;
        dat.dat = (feature_matrix)';
        dat.Y =  val(keep);
        [cverr, stats, optout] = predict(dat,  'algorithm_name', 'cv_lassopcr', 'nfolds', 5, 'error_type', 'mse', 'numcomponents', 10, 'Alpha', 0.5,...
             'bootweights','bootsamples', 100);
        stats
 
        f= figure,
        plot_correlation_samefig(stats.Y, stats.yfit);
        xlabel('original outcome (y)');
        ylabel('predicted outcome (y-fit)');
        saveas(f, [RPATH 'tom._p_lasso.5fold.nobin.png'])
        
        to_brain = zeros(400,3);
        to_brain(:,1) = ( stats.WTS.wP(1:400)<0.05);
        to_brain(:,2) = ( stats.WTS.wP(401:800)<0.05)
        to_brain(:,3) = ( stats.WTS.wP(801:1200)<0.05)
        %to_brain(mask>0,4) = ( stats.WTS.wP((3*18741)+1:4*18741)<0.05)
        
        sum_to_brain = sum(to_brain,2)
        for i = 1:200
            fn(parcels400==i+1) = sum_to_brain(i);
        end
        for i = 1:200
            fn(parcels400==i+1001) = sum_to_brain(i+200);
        end
        
        f = figure,
        BoSurfStatViewData(fn,SN,'')
        colormap([flipud(cbrewer('seq','Greys',3))])
        %BoSurfStatColLim([-2 2])
        saveas(f, [RPATH 'tom._p_lasso.5fold.brainp.png'])
       
        to_brain_m = sum(to_brain,2)
        for i = 1:3
            ntw_yeo(i,2) = sum(fn(ntw(i,:)>0))./sum(fn)
        end
        
        for i = 1:7
            yeo_pred(i,2) = sum(fn(yeo_s==i))./sum(fn)
        end

        
        to_brain_w = zeros(20484,3)
        for j = 1:3
            for i = 1:200
                to_brain_w(parcels400==i+1,j) = stats.WTS.wZ(i+((j-1)*400));
            end
            for i = 1:200
                to_brain_w(parcels400==i+1001,j) = stats.WTS.wZ((i+200)+((j-1)*400));
            end
        end
      
        f = figure,
        BoSurfStatViewData(mean((to_brain_w),2),SN,'')
        colormap([flipud(cbrewer('div','RdBu',11))])
        BoSurfStatColLim([-2 2])
        saveas(f, [RPATH 'tom._p_lasso.5fold.brainZabs.nobin.png'])
      
      
        
        for yeo_gradient_1 = 1
            for i = 1:3
                to_brain_m = mean((to_brain_w),2)
                change_p.v = to_brain_m(find(yeo_s==1));
                change_p.sn = to_brain_m(find(yeo_s==2));
                change_p.da = to_brain_m(find(yeo_s==3));
                change_p.va = to_brain_m(find(yeo_s==4));
                change_p.l = to_brain_m(find(yeo_s==5));
                change_p.fp = to_brain_m(find(yeo_s==6));
                change_p.dmn = to_brain_m(find(yeo_s==7));
                
                cl = [120 18 134; 70 130 180; 0 118 14; 196 58 250; 220 248 164;...
                    230 148 34; 205 62 78]./256;
                
                
                fig_position = [200 200 600 400]; % coordinates for figures
                
                d{1} = change_p.v';
                d{2} = change_p.sn';
                d{3} = change_p.da';
                d{4} = change_p.va';
                d{5} = change_p.l';
                d{6} = change_p.fp';
                d{7} = change_p.dmn';
                
                means = cellfun(@mean, d);
                variances = cellfun(@std, d);
                
                f = figure('Position', fig_position);
                h1 = raincloud_plot(d{1}, 'box_on', 1, 'color', cl(1,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .15, 'dot_dodge_amount', .15,...
                    'box_col_match', 0);
                h2 = raincloud_plot(d{2}, 'box_on', 1, 'color', cl(2,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .35, 'dot_dodge_amount', .35, 'box_col_match', 0);
                h3 = raincloud_plot(d{3}, 'box_on', 1, 'color', cl(3,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .55, 'dot_dodge_amount', .55, 'box_col_match', 0);
                h4 = raincloud_plot(d{4}, 'box_on', 1, 'color', cl(4,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .75, 'dot_dodge_amount', .75,...
                    'box_col_match', 0);
                h5 = raincloud_plot(d{5}, 'box_on', 1, 'color', cl(5,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .95, 'dot_dodge_amount', .95, 'box_col_match', 0);
                h6 = raincloud_plot(d{6}, 'box_on', 1, 'color', cl(6,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', 1.15, 'dot_dodge_amount', 1.15, 'box_col_match', 0);
                h7 = raincloud_plot(d{7}, 'box_on', 1, 'color', cl(7,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', 1.35, 'dot_dodge_amount', 1.35,...
                    'box_col_match', 0);
                
                set(gca,'XLim', [-2 2], 'YLim', [-3 3]);
                box off
                exportfigbo(f,[RPATH 'F3.pred.com.dim', num2str(i) ,'.png'],'png', 10)
            end
        end
        
        for social_gradient_1 = 1
        
        for i = 1:3
        to_brain_m = (to_brain_w(:,i))
        change_p.a = to_brain_m(find(ntw(1,:)>0));
        change_p.c = to_brain_m(find(ntw(2,:)>0));
        change_p.t = to_brain_m(find(ntw(3,:)>0));
        
        
        
        cl(1, :) = [0.8844    0.7828    0.0195];
        cl(2, :) = [0.9412    0.2314    0.1255];
        cl(3, :) = [0.1922    0.6392    0.3294];
        
        fig_position = [200 200 600 400]; % coordinates for figures
        
        d{1} = change_p.a';
        d{2} = change_p.c';
        d{3} = change_p.t';
        
        means = cellfun(@mean, d);
        variances = cellfun(@std, d);
        
        f = figure('Position', fig_position);
        h1 = raincloud_plot(d{1}, 'box_on', 1, 'color', cl(1,:), 'alpha', 0.5,...
            'box_dodge', 1, 'box_dodge_amount', .15, 'dot_dodge_amount', .15,...
            'box_col_match', 0);
        h2 = raincloud_plot(d{2}, 'box_on', 1, 'color', cl(2,:), 'alpha', 0.5,...
            'box_dodge', 1, 'box_dodge_amount', .35, 'dot_dodge_amount', .35, 'box_col_match', 0);
        h3 = raincloud_plot(d{3}, 'box_on', 1, 'color', cl(3,:), 'alpha', 0.5,...
            'box_dodge', 1, 'box_dodge_amount', .55, 'dot_dodge_amount', .55, 'box_col_match', 0);
        set(gca,'XLim', [-3 3], 'YLim', [-1 1]);
        box off
        exportfigbo(f,[RPATH 'F3.pred.tom',num2str(i), '.png'],'png', 10)
        end
    end
        
    end

for prediction_compassion = 1
        
        
        val     = (Comp);
        %Xn      = [zscore(Z_last(:,mask>0),[],2)];
        
        Xn      = [ G1_400', G2_400', G3_400'];
      
        Xn(isnan(Xn)) = 0;
        keep1   = find(strcmp(groupN,'Affect'));
        keep2   = intersect(find(abs(mean(Xn,2)) <100), find(sum(Xn,2)~=0));
        keep4   = find(~(strcmp(group4,'Group3')));
        keep5   = find(tpnum>0);
        keep6   = find(abs(val)<30);
        keep7   = find(val~=0);
        keep    = mintersect(keep1,keep2,keep4,keep5,keep6);
        
        Ck      = Xn(keep,:);
        ik      = id(keep,:);
        ink     = idnum(keep);
        tk      = tpnum(keep,:);
        tnk     = tp(keep,:);
        gk      = group(keep);
        g4k     = group4(keep);
        gNk     = groupN(keep);
        ak      = age(keep);
        sk      = cellstr(sex(keep));
        
        
        A       = term(ak);
        S       = term(sk);
        G       = term(gk);
        G4      = term(g4k);
        GN      = term(gNk);
        Sub     = term(ik);
        
        T       = term(tk);
        Tn      = term(tnk);
        
        g2k         = val(keep);
        g2k(Comp(keep)>0) = 1;
        g2k(Comp(keep)<0) = -1;
        g2k(Comp(keep)==0) = 0;
        
        G2 = term(g2k);
        
        Compk  = (val(keep));
        
        subj_uni = unique(ink);
   
        algoname = 'cv_lassopcr'; % cross-validated penalized regression. Predict pain ratings
        
        
        M = 1 + A + S;
        slm = SurfStatLinMod(Ck, M);
        feature_matrix = (Ck - slm.X*slm.coef);
       
        dat = dat;
        dat.dat = (feature_matrix)';
        dat.Y =  quantileranks(Compk,10);
        [cverr, stats, optout] = predict(dat,  'algorithm_name', 'cv_lassopcr', 'nfolds', 5, 'error_type', 'mse', 'numcomponents', 10, 'Alpha', 0.5,...
             'bootweights','bootsamples', 100);
        stats
 
        f= figure,
        plot_correlation_samefig(stats.Y, stats.yfit);
        xlabel('original outcome (y)');
        ylabel('predicted outcome (y-fit)');
        saveas(f, [RPATH 'com._p_lasso.5fold.nobin.png'])
     
        
        to_brain_w = zeros(20484,3)
        for j = 1:3
            for i = 1:200
                to_brain_w(parcels400==i+1,j) = stats.WTS.wZ(i+((j-1)*400));
            end
            for i = 1:200
                to_brain_w(parcels400==i+1001,j) = stats.WTS.wZ((i+200)+((j-1)*400));
            end
        end
      
        f = figure,
        BoSurfStatViewData(mean((to_brain_w),2),SN,'')
        colormap([flipud(cbrewer('div','RdBu',11))])
        BoSurfStatColLim([-2 2])
        saveas(f, [RPATH 'com._p_lasso.5fold.brainZabs.nobin.png'])
      
      
        yeo_gradient_1 = 0;
        if yeo_gradient_1 == 1
            for i = 1:3
                to_brain_m = mean((to_brain_w),2)
                change_p.v = to_brain_m(find(yeo_s==1));
                change_p.sn = to_brain_m(find(yeo_s==2));
                change_p.da = to_brain_m(find(yeo_s==3));
                change_p.va = to_brain_m(find(yeo_s==4));
                change_p.l = to_brain_m(find(yeo_s==5));
                change_p.fp = to_brain_m(find(yeo_s==6));
                change_p.dmn = to_brain_m(find(yeo_s==7));
                
                cl = [120 18 134; 70 130 180; 0 118 14; 196 58 250; 220 248 164;...
                    230 148 34; 205 62 78]./256;
                
                
                fig_position = [200 200 600 400]; % coordinates for figures
                
                d{1} = change_p.v';
                d{2} = change_p.sn';
                d{3} = change_p.da';
                d{4} = change_p.va';
                d{5} = change_p.l';
                d{6} = change_p.fp';
                d{7} = change_p.dmn';
                
                means = cellfun(@mean, d);
                variances = cellfun(@std, d);
                
                f = figure('Position', fig_position);
                h1 = raincloud_plot(d{1}, 'box_on', 1, 'color', cl(1,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .15, 'dot_dodge_amount', .15,...
                    'box_col_match', 0);
                h2 = raincloud_plot(d{2}, 'box_on', 1, 'color', cl(2,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .35, 'dot_dodge_amount', .35, 'box_col_match', 0);
                h3 = raincloud_plot(d{3}, 'box_on', 1, 'color', cl(3,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .55, 'dot_dodge_amount', .55, 'box_col_match', 0);
                h4 = raincloud_plot(d{4}, 'box_on', 1, 'color', cl(4,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .75, 'dot_dodge_amount', .75,...
                    'box_col_match', 0);
                h5 = raincloud_plot(d{5}, 'box_on', 1, 'color', cl(5,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .95, 'dot_dodge_amount', .95, 'box_col_match', 0);
                h6 = raincloud_plot(d{6}, 'box_on', 1, 'color', cl(6,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', 1.15, 'dot_dodge_amount', 1.15, 'box_col_match', 0);
                h7 = raincloud_plot(d{7}, 'box_on', 1, 'color', cl(7,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', 1.35, 'dot_dodge_amount', 1.35,...
                    'box_col_match', 0);
                
                set(gca,'XLim', [-2 2], 'YLim', [-3 3]);
                box off
                exportfigbo(f,[RPATH 'F3.pred.com.dim', num2str(i) ,'.png'],'png', 10)
            end
        end
        
        for social_gradient_1 = 1
            
            for i = 1:3
                to_brain_m = (to_brain_w(:,i))
                change_p.a = to_brain_m(find(ntw(1,:)>0));
                change_p.c = to_brain_m(find(ntw(2,:)>0));
                change_p.t = to_brain_m(find(ntw(3,:)>0));
                
                
                
                cl(1, :) = [0.8844    0.7828    0.0195];
                cl(2, :) = [0.9412    0.2314    0.1255];
                cl(3, :) = [0.1922    0.6392    0.3294];
                
                fig_position = [200 200 600 400]; % coordinates for figures
                
                d{1} = change_p.a';
                d{2} = change_p.c';
                d{3} = change_p.t';
                
                means = cellfun(@mean, d);
                variances = cellfun(@std, d);
                
                f = figure('Position', fig_position);
                h1 = raincloud_plot(d{1}, 'box_on', 1, 'color', cl(1,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .15, 'dot_dodge_amount', .15,...
                    'box_col_match', 0);
                h2 = raincloud_plot(d{2}, 'box_on', 1, 'color', cl(2,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .35, 'dot_dodge_amount', .35, 'box_col_match', 0);
                h3 = raincloud_plot(d{3}, 'box_on', 1, 'color', cl(3,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .55, 'dot_dodge_amount', .55, 'box_col_match', 0);
                set(gca,'XLim', [-3 3], 'YLim', [-1 1.5]);
                box off
                exportfigbo(f,[RPATH 'F3.pred.com',num2str(i), '.png'],'png', 10)
            end
        end
        
end

for prediction_tom = 1
        
        
        val     = (Att);
        %Xn      = [zscore(Z_last(:,mask>0),[],2)];
        
        Xn      = [ G1_400', G2_400', G3_400'];
      
        Xn(isnan(Xn)) = 0;
        keep1   = find(strcmp(groupN,'Presence'));
        keep2   = intersect(find(abs(mean(Xn,2)) <100), find(sum(Xn,2)~=0));
        keep4   = find(~(strcmp(group4,'Group3')));
        keep5   = find(tpnum>0);
        keep6   = find(abs(val)<30);
        keep7   = find(val~=0);
        keep    = mintersect(keep1,keep2,keep4,keep5,keep6);
        
        Ck      = Xn(keep,:);
        ik      = id(keep,:);
        ink     = idnum(keep);
        tk      = tpnum(keep,:);
        tnk     = tp(keep,:);
        gk      = group(keep);
        g4k     = group4(keep);
        gNk     = groupN(keep);
        ak      = age(keep);
        sk      = cellstr(sex(keep));
        
        
        A       = term(ak);
        S       = term(sk);
        G       = term(gk);
        G4      = term(g4k);
        GN      = term(gNk);
        Sub     = term(ik);
        
        T       = term(tk);
        Tn      = term(tnk);
        
        g2k         = val(keep);
        g2k(Comp(keep)>0) = 1;
        g2k(Comp(keep)<0) = -1;
        g2k(Comp(keep)==0) = 0;
        
        G2 = term(g2k);
        
        Compk  = (val(keep));
        
        subj_uni = unique(ink);
   
        algoname = 'cv_lassopcr'; % cross-validated penalized regression. Predict pain ratings
        
        
        M = 1 + A + S ;
        slm = SurfStatLinMod(Ck, M);
        feature_matrix = (Ck - slm.X*slm.coef);
       
        dat = fmri_data;
        dat.dat = (feature_matrix)';
        dat.Y =  quantileranks(Compk,10);
        [cverr, stats, optout] = predict(dat,  'algorithm_name', 'cv_lassopcr', 'nfolds', 5, 'error_type', 'mse', 'numcomponents', 10, 'Alpha', 0.5,...
             'bootweights','bootsamples', 5000);
        stats
 
        f= figure,
        plot_correlation_samefig(stats.Y, stats.yfit);
        xlabel('original outcome (y)');
        ylabel('predicted outcome (y-fit)');
        saveas(f, [RPATH 'att._p_lasso.5fold.10bins.png'])
     
        
        to_brain_w = zeros(20484,3)
        for j = 1:3
            for i = 1:200
                to_brain_w(parcels400==i+1,j) = stats.WTS.wZ(i+((j-1)*400));
            end
            for i = 1:200
                to_brain_w(parcels400==i+1001,j) = stats.WTS.wZ((i+200)+((j-1)*400));
            end
        end
      
        f = figure,
        BoSurfStatViewData(mean((to_brain_w),2),SN,'')
        colormap([flipud(cbrewer('div','RdBu',11))])
        BoSurfStatColLim([-2 2])
        saveas(f, [RPATH 'att._p_lasso.5fold.brainZabs.png'])
      
      
        yeo_gradient_1 = 0;
        if yeo_gradient_1 == 1
            for i = 1:3
                to_brain_m = mean((to_brain_w),2)
                change_p.v = to_brain_m(find(yeo_s==1));
                change_p.sn = to_brain_m(find(yeo_s==2));
                change_p.da = to_brain_m(find(yeo_s==3));
                change_p.va = to_brain_m(find(yeo_s==4));
                change_p.l = to_brain_m(find(yeo_s==5));
                change_p.fp = to_brain_m(find(yeo_s==6));
                change_p.dmn = to_brain_m(find(yeo_s==7));
                
                cl = [120 18 134; 70 130 180; 0 118 14; 196 58 250; 220 248 164;...
                    230 148 34; 205 62 78]./256;
                
                
                fig_position = [200 200 600 400]; % coordinates for figures
                
                d{1} = change_p.v';
                d{2} = change_p.sn';
                d{3} = change_p.da';
                d{4} = change_p.va';
                d{5} = change_p.l';
                d{6} = change_p.fp';
                d{7} = change_p.dmn';
                
                means = cellfun(@mean, d);
                variances = cellfun(@std, d);
                
                f = figure('Position', fig_position);
                h1 = raincloud_plot(d{1}, 'box_on', 1, 'color', cl(1,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .15, 'dot_dodge_amount', .15,...
                    'box_col_match', 0);
                h2 = raincloud_plot(d{2}, 'box_on', 1, 'color', cl(2,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .35, 'dot_dodge_amount', .35, 'box_col_match', 0);
                h3 = raincloud_plot(d{3}, 'box_on', 1, 'color', cl(3,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .55, 'dot_dodge_amount', .55, 'box_col_match', 0);
                h4 = raincloud_plot(d{4}, 'box_on', 1, 'color', cl(4,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .75, 'dot_dodge_amount', .75,...
                    'box_col_match', 0);
                h5 = raincloud_plot(d{5}, 'box_on', 1, 'color', cl(5,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .95, 'dot_dodge_amount', .95, 'box_col_match', 0);
                h6 = raincloud_plot(d{6}, 'box_on', 1, 'color', cl(6,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', 1.15, 'dot_dodge_amount', 1.15, 'box_col_match', 0);
                h7 = raincloud_plot(d{7}, 'box_on', 1, 'color', cl(7,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', 1.35, 'dot_dodge_amount', 1.35,...
                    'box_col_match', 0);
                
                set(gca,'XLim', [-2 2], 'YLim', [-3 3]);
                box off
                exportfigbo(f,[RPATH 'F3.pred.att.dim', num2str(i) ,'.png'],'png', 10)
            end
        end
        
        for social_gradient_1 = 1
            
            for i = 1:3
                to_brain_m = (to_brain_w(:,i))
                change_p.a = to_brain_m(find(ntw(1,:)>0));
                change_p.c = to_brain_m(find(ntw(2,:)>0));
                change_p.t = to_brain_m(find(ntw(3,:)>0));
                
                
                
                cl(1, :) = [0.8844    0.7828    0.0195];
                cl(2, :) = [0.9412    0.2314    0.1255];
                cl(3, :) = [0.1922    0.6392    0.3294];
                
                fig_position = [200 200 600 400]; % coordinates for figures
                
                d{1} = change_p.a';
                d{2} = change_p.c';
                d{3} = change_p.t';
                
                means = cellfun(@mean, d);
                variances = cellfun(@std, d);
                
                f = figure('Position', fig_position);
                h1 = raincloud_plot(d{1}, 'box_on', 1, 'color', cl(1,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .15, 'dot_dodge_amount', .15,...
                    'box_col_match', 0);
                h2 = raincloud_plot(d{2}, 'box_on', 1, 'color', cl(2,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .35, 'dot_dodge_amount', .35, 'box_col_match', 0);
                h3 = raincloud_plot(d{3}, 'box_on', 1, 'color', cl(3,:), 'alpha', 0.5,...
                    'box_dodge', 1, 'box_dodge_amount', .55, 'dot_dodge_amount', .55, 'box_col_match', 0);
                set(gca,'XLim', [-3 3], 'YLim', [-1 1.5]);
                box off
                exportfigbo(f,[RPATH 'F3.pred.att',num2str(i), '.png'],'png', 10)
            end
        end
        
end

